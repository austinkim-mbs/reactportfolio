{"version":3,"sources":["helpers.js","styles.js","icons.js","App.js","serviceWorker.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","useMeasure","useState","left","top","width","height","bounds","set","ResizeObserver","entry","contentRect","ro","observe","disconnect","createGlobalStyle","Frame","styled","Title","Content","animated","div","toggle","marginRight","cursor","verticalAlign","MinusSquareO","props","viewBox","d","PlusSquareO","CloseSquareO","Tree","memo","children","name","style","defaultOpen","isOpen","setOpen","previous","bind","viewHeight","useSpring","from","opacity","transform","to","Icon","Icons","onClick","DescriptiveTree","App","className","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f6400cab.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\n\r\nexport function usePrevious(value) {\r\n  const ref = useRef()\r\n  useEffect(() => void (ref.current = value), [value])\r\n  return ref.current\r\n}\r\n\r\nexport function useMeasure() {\r\n  const ref = useRef()\r\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\r\n  const [ro] = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)))\r\n  useEffect(() => {\r\n    if (ref.current) ro.observe(ref.current)\r\n    return () => ro.disconnect()\r\n  }, [])\r\n  return [{ ref }, bounds]\r\n}\r\n","import styled, { createGlobalStyle } from 'styled-components'\r\nimport { animated } from 'react-spring'\r\n\r\nconst Global = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  html,\r\n  body,\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    background: #191b21;\r\n    overflow: hidden;\r\n    font-family: 'Monospaced Number', 'Chinese Quote', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\r\n      'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n  }\r\n  html,\r\n  body,\r\n  div,\r\n  a,\r\n  i,\r\n  button,\r\n  select,\r\n  option,\r\n  optgroup,\r\n  hr,\r\n  br {\r\n    user-select: none;\r\n    cursor: default;\r\n  }\r\n  #root {\r\n    padding: 30px;\r\n  }\r\n`\r\n\r\nconst Frame = styled('div')`\r\n  position: relative;\r\n  padding: 4px 0px 0px 0px;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n  vertical-align: middle;\r\n  color: #415d74;\r\n  fill: #415d74;\r\n`\r\n\r\nconst Title = styled('span')`\r\n  vertical-align: middle;\r\n`\r\n\r\nconst Content = styled(animated.div)`\r\n  will-change: transform, opacity, height;\r\n  margin-left: 6px;\r\n  padding: 0px 0px 0px 14px;\r\n  border-left: 1px dashed rgba(255, 255, 255, 0.4);\r\n  overflow: hidden;\r\n`\r\n\r\nconst toggle = {\r\n  width: '1em',\r\n  height: '1em',\r\n  marginRight: 10,\r\n  cursor: 'pointer',\r\n  verticalAlign: 'middle'\r\n}\r\n\r\nexport { Global, Frame, Content, toggle, Title }\r\n","import React from 'react'\r\n\r\nconst MinusSquareO = props => (\r\n  <svg {...props} viewBox=\"64 -65 897 897\">\r\n    <g>\r\n      <path\r\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 347h-442q-14 0 -25 10.5t-11 25.5v0q0 15 11 25.5t25 10.5h442q14 0 25 -10.5t11 -25.5v0\r\n  q0 -15 -11 -25.5t-25 -10.5z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst PlusSquareO = props => (\r\n  <svg {...props} viewBox=\"64 -65 897 897\">\r\n    <g>\r\n      <path\r\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 420h-184v183q0 15 -10.5 25.5t-25.5 10.5v0q-14 0 -25 -10.5t-11 -25.5v-183h-184\r\n  q-15 0 -25.5 -11t-10.5 -25v0q0 -15 10.5 -25.5t25.5 -10.5h184v-183q0 -15 11 -25.5t25 -10.5v0q15 0 25.5 10.5t10.5 25.5v183h184q15 0 25.5 10.5t10.5 25.5v0q0 14 -10.5 25t-25.5 11z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst CloseSquareO = props => (\r\n  <svg {...props} viewBox=\"64 -65 897 897\">\r\n    <g>\r\n      <path\r\n        d=\"M717.5 589.5q-10.5 10.5 -25.5 10.5t-26 -10l-154 -155l-154 155q-11 10 -26 10t-25.5 -10.5t-10.5 -25.5t11 -25l154 -155l-154 -155q-11 -10 -11 -25t10.5 -25.5t25.5 -10.5t26 10l154 155l154 -155q11 -10 26 -10t25.5 10.5t10.5 25t-11 25.5l-154 155l154 155\r\n  q11 10 11 25t-10.5 25.5zM888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport { PlusSquareO, MinusSquareO, CloseSquareO }\r\n","import './App.css';\r\nimport './index.css';\r\nimport React, { memo, useState } from 'react'\r\nimport { useSpring, a, animated } from 'react-spring'\r\nimport { useMeasure, usePrevious } from './helpers'\r\nimport { Global, Frame, Title, Content, toggle } from './styles'\r\nimport * as Icons from './icons'\r\n\r\n\r\nconst Tree = memo(({ children, name, style, defaultOpen = false }) => {\r\n  const [isOpen, setOpen] = useState(defaultOpen);\r\n  const previous = usePrevious(isOpen);\r\n  const [bind, { height: viewHeight }] = useMeasure();\r\n  const { height, opacity, transform } = useSpring({\r\n    from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n    to: { height: isOpen ? viewHeight : 0, opacity: isOpen ? 1 : 0, transform: `translate3d(${isOpen ? 0 : 20}px,0,0)` }\r\n  })\r\n  const Icon = Icons[`${children ? (isOpen ? 'Minus' : 'Plus') : 'Close'}SquareO`];\r\n  return (\r\n    <Frame>\r\n      <Icon style={{ ...toggle, opacity: children ? 1 : 0.3 }} onClick={() => setOpen(!isOpen)} />\r\n      <Title style={style}>{name}</Title>\r\n      <Content style={{ opacity, height: isOpen && previous === isOpen ? 'auto' : height }}>\r\n        <a.div style={{ transform }} {...bind} children={children} />\r\n      </Content>\r\n    </Frame>\r\n  );\r\n});\r\n\r\n// No child version of Tree, with darker text background.\r\nconst DescriptiveTree = ( ({children, name, style, defaultOpen=false}) => {\r\n  const [isOpen, setOpen] = useState(defaultOpen);\r\n  const previous = usePrevious(isOpen);\r\n  const [bind, { height: viewHeight }] = useMeasure();\r\n\r\n  const { height, opacity, transform } = useSpring({\r\n    from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n    to: { height: isOpen ? viewHeight : 0, opacity: isOpen ? 1 : 0, transform: `translate3d(${isOpen ? 0 : 20}px,0,0)` }\r\n  })\r\n\r\n\r\n  const Icon = Icons[`${isOpen ? 'Minus' : 'Plus'}SquareO`];\r\n  return(\r\n    <Frame >\r\n      <Icon style={{ ...toggle }} onClick={() => setOpen(!isOpen)} />\r\n      <Title>{name}</Title>\r\n      <Content style={{ opacity, height: isOpen && previous === isOpen ? 'auto' : height }}>\r\n        <a.div style={{ transform }} {...bind} children={children} />\r\n      </Content>\r\n    </Frame>\r\n  );\r\n}); \r\n\r\nfunction App() {\r\n  const props = useSpring({opacity: 1, from: {opacity: 0}});\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      \r\n          <Tree name=\"hello world\">\r\n            <Tree name =\"start here\">\r\n              Hello! My name is Austin Kim and I am looking for Software Engineering roles. I graduated with a CS and Biology Double Major in 2017 from Macalester College in Minnesota.\r\n              <Tree name=\"resume\"></Tree>\r\n            </Tree>\r\n            <Tree name=\"about me\">\r\n              <Tree name=\"projects\">\r\n                <DescriptiveTree name=\"try me\"/>\r\n                <Tree name=\"frontend\"></Tree>\r\n                <Tree name=\"backend\"></Tree>\r\n                <Tree name=\"hobby\">\r\n                  <Tree name=\"music discord bot\"></Tree>\r\n                  <Tree name=\"M3u8 Live Broadcast Player\">Under Development</Tree>\r\n\r\n                </Tree>\r\n              </Tree>\r\n              <Tree name=\"my websites\">\r\n                <Tree name=\"Github\"><a href=\"https://github.com/kimx5230\">Click Here</a></Tree>\r\n                <Tree name=\"LinkedIn\"></Tree>\r\n                <Tree name=\"Email Me\"></Tree>\r\n              </Tree>\r\n            </Tree>\r\n            <Tree name=\"about this layout\">\r\n              This layout is borrowed from a <a href=\"https://codesandbox.io/embed/lp80n9z7v9\">react-spring</a> example. This portfolio was made to play around with react-spring.\r\n            </Tree>\r\n          </Tree>\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}